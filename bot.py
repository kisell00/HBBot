import os
import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv

load_dotenv()

# –ó–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ–º–æ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤ —Å–ª–æ–≤–Ω–∏–∫—É (–º–æ–∂–Ω–∞ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–∏—Ö)
birthdays = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º —Å–ª—ñ–¥–∫—É–≤–∞—Ç–∏ –∑–∞ –¥–Ω—è–º–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /add_birthday, —â–æ–± –¥–æ–¥–∞—Ç–∏.")

async def add_birthday(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        args = context.args
        if len(args) < 2:
            raise ValueError("–í–∫–∞–∂—ñ—Ç—å —ñ–º'—è —ñ –¥–∞—Ç—É (—É —Ñ–æ—Ä–º–∞—Ç—ñ: –î–î.–ú–ú)")
        
        name = args[0]
        date = datetime.datetime.strptime(args[1], "%d.%m").date()
        birthdays[name] = date
        await update.message.reply_text(f"–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è {name} –¥–æ–¥–∞–Ω–æ –Ω–∞ {date.strftime('%d.%m')}")
    except Exception as e:
        await update.message.reply_text(f"–ü–æ–º–∏–ª–∫–∞: {str(e)}")

async def check_birthdays(context: ContextTypes.DEFAULT_TYPE):
    today = datetime.date.today()
    for name, date in birthdays.items():
        if date.day == today.day and date.month == today.month:
            await context.bot.send_message(chat_id=context.job.chat_id, text=f"üéâ –í—ñ—Ç–∞—î–º–æ {name} –∑ –î–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!")

async def schedule_jobs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    context.job_queue.run_daily(check_birthdays, time=datetime.time(9, 0), chat_id=chat_id)
    await update.message.reply_text("–©–æ–¥–µ–Ω–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∞ –Ω–∞ 9:00.")

if __name__ == '__main__':
    app = ApplicationBuilder().token(os.getenv("BOT_TOKEN")).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("add_birthday", add_birthday))
    app.add_handler(CommandHandler("schedule", schedule_jobs))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    app.run_polling()
